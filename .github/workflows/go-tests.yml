name: go-tests
on:
  pull_request:
  push:
    branches: [main]

jobs:
  golangci:
    name: golangci-lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
      - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
      - name: golangci-lint
        uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5  # pin@v3.4.0
        with:
          version: v1.51.2
          args: |
            --disable-all \
            --timeout 10m \
            --enable gofmt \
            --enable gosimple \
            --enable govet \
            --verbose
          skip-pkg-cache: true
          skip-build-cache: true
      - uses: hashicorp/actions-slack-status@v1
        if: failure() && github.ref == 'refs/heads/main'
        with:
          failure-message: 'Linting failed'
          status: ${{job.status}}
          slack-webhook-url: ${{secrets.SLACK_WEBHOOK_URL}}
  check-vendor:
    name: check-vendor
    runs-on: ubuntu-latest
    needs:
      - golangci
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: check-vendor
        run: |
          go mod tidy
          if ! git diff --exit-code; then
            echo "Git directory has vendor changes"
            exit 1
          fi
      - uses: hashicorp/actions-slack-status@v1
        if: failure() && github.ref == 'refs/heads/main'
        with:
          failure-message: 'Go mod tidyness check failed'
          status: ${{job.status}}
          slack-webhook-url: ${{secrets.SLACK_WEBHOOK_URL}}
  go-test:
    runs-on: ubuntu-latest
    env:
      GOTAGS: ''
      GOMAXPROCS: 4
      TEST_RESULTS_DIR: "/tmp/test-results"
      GOTESTSUM_RELEASE: 1.8.2
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      - name: Install gotestsum
        run: |-
          url=https://github.com/gotestyourself/gotestsum/releases/download
          curl -sSL "${url}/v${GOTESTSUM_RELEASE}/gotestsum_${GOTESTSUM_RELEASE}_linux_amd64.tar.gz" | \
            sudo tar -xz --overwrite -C /usr/local/bin gotestsum
      - name: Mod download
        run: go mod download
      - name: go test
        run: |-
          mkdir -p "${TEST_RESULTS_DIR}"
          gotestsum --format=short-verbose \
            --junitfile "${TEST_RESULTS_DIR}"/gotestsum-report.xml -- \
            -tags="${GOTAGS}" -p 2 \
            -cover -coverprofile=coverage.txt \
            ./...
      - uses: hashicorp/actions-slack-status@v1
        if: failure() && github.ref == 'refs/heads/main'
        with:
          failure-message: 'Test suite failed'
          status: ${{job.status}}
          slack-webhook-url: ${{secrets.SLACK_WEBHOOK_URL}}
  go-generate-test:
    runs-on: ubuntu-latest
    needs:
      - go-test
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - name: Determine Go version
        id: get-go-version
        # We use .go-version as our source of truth for current Go
        # version, because "goenv" can react to it automatically.
        run: |
          echo "Building with Go $(cat .go-version)"
          echo "go-version=$(cat .go-version)" >> "$GITHUB_OUTPUT"
      - name: Set up Go
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3.5.0
        with:
          go-version: "${{ steps.get-go-version.outputs.go-version }}"
      - name: Install protoc tool
        run: |-
          url=https://github.com/protocolbuffers/protobuf/releases/download/v3.17.3/protoc-3.17.3-linux-x86_64.zip
          curl -sSL "${url}" -o protoc3173.zip
          unzip protoc3173.zip -d "${HOME}"/.local/protoc
          echo "${HOME}"/.local/protoc/bin >> "${GITHUB_PATH}"
      - name: Install Dependencies
        run: |
          go mod download
          git submodule update --init --recursive
      - name: Install tool dependencies
        run: |
          make --always-make tools
      - name: go generate
        run: |-
          make gen
      - uses: hashicorp/actions-slack-status@v1
        if: failure() && github.ref == 'refs/heads/main'
        with:
          failure-message: 'Go generate failed'
          status: ${{job.status}}
          slack-webhook-url: ${{secrets.SLACK_WEBHOOK_URL}}

permissions:
  contents: read
