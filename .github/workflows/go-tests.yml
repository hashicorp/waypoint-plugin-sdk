name: hashicorp/waypoint-plugin-sdk/go-tests
on:
  pull_request:

env:
  SLACK_WEBHOOK: xxxxxxx
jobs:
  # golangci:
  #   name: golangci-lint
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # pin@v3.3.0
  #     - uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # pin@v3.5.0
  #     - name: golangci-lint
  #       uses: golangci/golangci-lint-action@08e2f20817b15149a52b5b3ebe7de50aff2ba8c5  # pin@v3.4.0
  #       with:
  #         version: v1.51.2
  #         args: |
  #           --disable-all \
  #           --timeout 10m \
  #           --enable gofmt \
  #           --enable gosimple \
  #           --enable govet \
  #           --verbose
  #         skip-pkg-cache: true
  #         skip-build-cache: true
  # check-vendor:
  #   name: check-vendor
  #   runs-on: ubuntu-latest
  #   needs:
  #     - golangci
  #   env:
  #     EMAIL: noreply@hashicorp.com
  #   steps:
  #     # - uses: "./.github/actions/notify_main_failure"
  #     - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
  #     - name: check-vendor
  #       run: |
  #         go mod tidy
  #         if ! git diff --exit-code; then
  #           echo "Git directory has vendor changes"
  #           exit 1
  #         fi
  # go-test:
  #   runs-on: ubuntu-latest
  #   needs:
  #     - golangci
  #   env:
  #     GOTAGS: ''
  #     GOMAXPROCS: 4
  #     TEST_RESULTS_DIR: "/tmp/test-results"
  #     GOTESTSUM_RELEASE: 1.8.2
  #   steps:
  #     - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
  #     - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
  #     - name: Install gotestsum
  #       run: |-
  #         url=https://github.com/gotestyourself/gotestsum/releases/download
  #         curl -sSL "${url}/v${GOTESTSUM_RELEASE}/gotestsum_${GOTESTSUM_RELEASE}_linux_amd64.tar.gz" | \
  #           sudo tar -xz --overwrite -C /usr/local/bin gotestsum
  #     - name: Mod download
  #       run: go mod download
  #     - name: go test
  #       run: |-
  #         mkdir -p "${TEST_RESULTS_DIR}"
  #         # PACKAGE_NAMES=$(go list ./...)
  #         # echo "Finding package names"
  #         # echo "${PACKAGE_NAMES}"
  #         gotestsum --format=short-verbose \
  #           --junitfile "${TEST_RESULTS_DIR}"/gotestsum-report.xml -- \
  #           -tags="${GOTAGS}" -p 2 \
  #           -cover -coverprofile=coverage.txt \
  #           ./...
  #     - uses: "./.github/actions/notify_main_failure"
  go-generate-test:
    runs-on: ubuntu-latest
    # needs:
    #   - golangci
    #   - go-test
    env:
      TEST_RESULTS_DIR: "/tmp/test-results"
      EMAIL: noreply@hashicorp.com
    steps:
      - uses: actions/checkout@8f4b7f84864484a7bf31766abe9204da3cbe65b3 # v3.5.0
      - uses: actions/download-artifact@9bc31d5ccc31df68ecc42ccf4149144866c47d8a # v3.0.2
      - name: setup go env
        run: |-
          go mod download
          git submodule update --init --recursive
      - name: Install Dependencies
        run: |-
          make tools
      - name: go generate
        run: |-
          echo "Checking that go generate has no errors ..."
          # sudo chmod 755 -R /usr/local/bin/protoc
          # sudo chmod 755 -R /usr/local/include/google
          # go install google.golang.org/protobuf/cmd/protoc-gen-go@v1.27.1
          # go install google.golang.org/grpc/cmd/protoc-gen-go-grpc@v1.2.0
          # protoc --version
          make gen
      - uses: "./.github/actions/notify_main_failure"
permissions:
  contents: read
